<!-- 这是一个可以直接使用的完整页脚(Footer)代码，已集成访问统计功能 -->
<footer class="vh-footer">
	<main>
		<!-- 引入 Font Awesome 图标库 -->
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

		<style>
			/* 这里是您原来的样式，我保留了它们。*/
			.social-icons {
				display: flex; /* 使用 Flexbox 布局 */
				justify-content: center; /* 水平居中 */
				align-items: center; /* 垂直居中 */
				flex-wrap: wrap; /* 在小屏幕上换行 */
				gap: 15px; /* 设置项目之间的间距 */
				margin-top: 8px;
			}

			.social-icons a {
				margin: 0; /* 移除旧的 margin，使用 gap 代替 */
				color: #444;
				font-size: 28px;
				text-decoration: none;
				transition: transform 0.3s, color 0.3s;
			}

			.social-icons a:hover {
				transform: scale(1.2);
			}

			.social-icons a.twitter:hover {
				color: #1da1f2;
			}

			.social-icons a.facebook:hover {
				color: #3b5998;
			}

			.social-icons a.email:hover {
				color: #d44638;
			}
			
			/* 新增社交图标的悬停颜色 */
			.social-icons a.github:hover {
				color: #333;
			}
			
			.social-icons a.gitlab:hover {
				color: #e24329; /* GitLab 品牌颜色 */
			}

			.social-icons a.discord:hover {
				color: #5865F2;
			}

			/* --- 新增：回到顶部按钮样式 --- */
			.back-to-top-circle {
				position: relative; /* 用于箭头图标的绝对定位 */
				width: 50px; /* 调整大小以更好地对齐 */
				height: 50px;
				border-radius: 50%; /* 保证是圆形 */
				background-color: #ccc; /* 图片加载失败时的备用颜色 */
				/* !!! 在这里替换为您自己的图片链接 !!! */
				background-image: url('https://img.8888.vvvv.ee/file/图片/1751855752412.jpg');
				background-size: cover;
				background-position: center;
				cursor: pointer;
				margin: 0; /* 移除旧的 margin，使用 gap 代替 */
				transition: all 0.4s ease;
				overflow: hidden; /* 隐藏可能溢出的内容 */
				border: 2px solid #53a8b6;
				flex-shrink: 0; /* 防止在 flex 布局中被压缩 */
			}

			.back-to-top-circle .arrow-icon {
				position: absolute;
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				color: white;
				font-size: 24px; /* 调整箭头大小 */
				opacity: 0; /* 默认隐藏箭头 */
				transition: opacity 0.4s ease;
			}

			.back-to-top-circle:hover {
				transform: translateY(-5px); /* 鼠标悬浮时轻微上移 */
				box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
				border-color: #e94560;
			}

			/* 鼠标悬浮时，通过伪元素添加一个半透明遮罩层 */
			.back-to-top-circle:hover::before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				background-color: rgba(0, 0, 0, 0.5); /* 深色遮罩 */
				border-radius: 50%;
				z-index: 1; /* 确保遮罩在背景图之上 */
			}

			/* 鼠标悬浮时显示箭头 */
			.back-to-top-circle:hover .arrow-icon {
				opacity: 1; /* 显示箭头 */
				z-index: 2; /* 确保箭头在遮罩之上 */
			}
			
			.footer-icons {
				text-align: center;
				margin: 25px 0 15px; /* 调整间距 */
			}
			
			.footer-icons a {
				margin: 0 5px;
			}

			/* --- 访问统计样式 (已修改) --- */
			.visitor-stats {
				text-align: center;
				margin: 20px 0;
			}

			.stats-container {
				display: flex;
				justify-content: center;
				align-items: center;
				flex-wrap: wrap;
				gap: 12px;
			}

			.stat-item {
				color: #ff4747; /* 修改为高亮红色 */
				font-size: 16px; /* 字体调大 */
				font-weight: 500; /* 让字体稍微加粗 */
				letter-spacing: 0.5px;
				text-shadow: 0 0 5px rgba(255, 71, 71, 0.7); /* 添加红色辉光效果 */
			}

			.stat-number {
				color: #8de2e0;
				font-weight: 600;
				text-shadow: 0 0 8px rgba(141, 226, 224, 0.6);
			}

			.stat-separator {
				color: #53a8b6;
				font-weight: 300;
			}

			/* --- 用于将计时器和备案号放在同一行的容器 --- */
			.bottom-info-row {
				display: flex;
				justify-content: center;
				align-items: center;
				flex-wrap: wrap;
				gap: 20px;
				padding: 8px 0;
				margin-top: 15px;
			}

			/* --- 炫酷边框通用样式 --- */
			.cool-box-container {
				position: relative;
				padding: 12px 25px 12px 45px;
				border: 2px solid #53a8b6;
				border-radius: 50px;
				background-color: rgba(22, 33, 62, 0.7);
				box-shadow: 0 0 10px rgba(83, 168, 182, 0.5),
										0 0 20px rgba(83, 168, 182, 0.3);
				backdrop-filter: blur(5px);
				transition: all 0.3s ease;
				animation: glow 2.5s infinite alternate;
				white-space: nowrap;
			}
			
			.cool-box-container a,
			.cool-box-container span {
				color: #f0f0f0;
				text-decoration: none;
				font-size: 14px;
				font-weight: 500;
				letter-spacing: 1px;
				transition: color 0.3s ease;
			}

			.cool-box-container:hover {
				transform: translateY(-3px);
				box-shadow: 0 0 15px rgba(233, 69, 96, 0.6),
										0 0 30px rgba(233, 69, 96, 0.4);
				border-color: #e94560;
			}

			.cool-box-container:hover a,
			.cool-box-container:hover span {
				color: #ffffff;
			}
			
			/* --- 备案号和计时器的特定图标 --- */
			#icp-container::before {
				content: '♥';
				position: absolute;
				left: 18px;
				top: 50%;
				transform: translateY(-50%);
				font-size: 18px;
				color: #e94560;
				text-shadow: 0 0 8px rgba(233, 69, 96, 0.8);
			}
			
			#runtime-container::before {
				content: '⏳'; /* 沙漏图标 */
				position: absolute;
				left: 18px;
				top: 50%;
				transform: translateY(-50%);
				font-size: 18px;
				color: #8de2e0; /* 匹配辉光动画的颜色 */
				text-shadow: 0 0 8px rgba(141, 226, 224, 0.8);
			}

			@keyframes glow {
				from {
						border-color: #53a8b6;
						box-shadow: 0 0 10px rgba(83, 168, 182, 0.5),
												0 0 20px rgba(83, 168, 182, 0.3);
				}
				to {
						border-color: #8de2e0;
						box-shadow: 0 0 20px rgba(141, 226, 224, 0.7),
												0 0 40px rgba(141, 226, 224, 0.5);
				}
			}

			/* --- 响应式设计 --- */
			@media (max-width: 768px) {
				.stats-container {
					gap: 8px;
				}
				
				.stat-item {
					font-size: 14px;
				}
				
				.bottom-info-row {
					gap: 15px;
				}
				
				.cool-box-container {
					padding: 10px 20px 10px 40px;
				}
				
				.cool-box-container a,
				.cool-box-container span {
					font-size: 13px;
				}
			}

			@media (max-width: 480px) {
				.visitor-stats {
					margin: 15px 0;
				}
				
				.stats-container {
					flex-direction: column;
					gap: 8px;
				}
				
				.stat-separator {
					display: none;
				}
				
				.stat-item {
					font-size: 13px;
				}
			}
		</style>

		<!-- 社交图标与回到顶部按钮 -->
		<div class="social-icons">
			<!-- 左边三个图标 -->
			<a href="https://github.com/gdydg" class="github" target="_blank" title="GitHub">
				<i class="fab fa-github"></i>
			</a>
			<a href="https://gitlab.com/gdydg" class="gitlab" target="_blank" title="GitLab">
				<i class="fab fa-gitlab"></i>
			</a>
			<a href="https://discord.gg/8DQyvHP2" class="discord" target="_blank" title="Discord">
				<i class="fab fa-discord"></i>
			</a>
			
			<!-- 中间的回到顶部按钮 -->
			<div id="back-to-top" class="back-to-top-circle" title="回到顶部">
				<i class="fas fa-arrow-up arrow-icon"></i>
			</div>
			
			<!-- 右边三个图标 -->
			<a href="https://twitter.com/ikun202491" class="twitter" target="_blank" title="Twitter">
				<i class="fab fa-twitter"></i>
			</a>
			<a href="https://facebook.com/profile.php?id=61552671213764" class="facebook" target="_blank" title="Facebook">
				<i class="fab fa-facebook"></i>
			</a>
			<a href="mailto:admin@204090.xyz" class="email" title="发送邮件">
				<i class="fas fa-envelope"></i>
			</a>
		</div>

		<!-- Astro, Theme 等图标 -->
		<p class="footer-icons">
			<a href="https://astro.build/" target="_blank" rel="noopener noreferrer"><img alt="Astro" src="/assets/images/footer/astro.svg" /></a>
			<a href="https://github.com/uxiaohan/vhAstro-Theme" target="_blank" rel="noopener noreferrer"><img alt="vhAstro-Theme" src="/assets/images/footer/theme.svg" /></a>
			<a href="/sitemap-index.xml" target="_blank"><img alt="sitemap" src="/assets/images/footer/sitemap.svg" /></a>
			<a href="/rss.xml" target="_blank"><img alt="rss" src="/assets/images/footer/rss.svg" /></a>
		</p>

		<!-- 访问统计 -->
		<div class="visitor-stats">
			<div class="stats-container">
				<span class="stat-item">
					本日访问量 <span class="stat-number" id="dailyVisits">-</span> 次
				</span>
				<span class="stat-separator">|</span>
				<span class="stat-item">
					访客数 <span class="stat-number" id="dailyVisitors">-</span> 人
				</span>
				<span class="stat-separator">|</span>
				<span class="stat-item">
					本站总访问量 <span class="stat-number" id="totalVisits">-</span> 次
				</span>
				<span class="stat-separator">|</span>
				<span class="stat-item">
					总访客数 <span class="stat-number" id="totalVisitors">-</span> 人
				</span>
			</div>
		</div>

		<!-- 备案号和计时器容器 -->
		<div class="bottom-info-row">
			<!-- 备案号 -->
			<div id="icp-container" class="cool-box-container">
				<a href="https://icp.gov.moe/?keyword=20258860" target="_blank">萌ICP备20258860号</a>
			</div>
			
			<!-- 站点存活时间 -->
			<div id="runtime-container" class="cool-box-container">
				<span id="runtime-display">正在加载中...</span>
			</div>
		</div>

		<script>
			// === 站点存活时间计时器 ===
			function updateRuntime() {
				// !!! 请在这里修改为您站点的建立日期 !!!
				const startDate = new Date('2025-07-01T12:00:00');
				
				const now = new Date();
				const diff = now - startDate;

				const days = Math.floor(diff / (1000 * 60 * 60 * 24));
				const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
				const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
				const seconds = Math.floor((diff % (1000 * 60)) / 1000);

				const runtimeDisplay = document.getElementById('runtime-display');
				if (runtimeDisplay) {
					runtimeDisplay.textContent = `本站已苟活: ${days}天 ${hours}时 ${minutes}分 ${seconds}秒`;
				}
			}

			// === 访问统计功能 (已更新为使用 Cloudflare Worker) ===
			class BlogVisitorStats {
				constructor(workerUrl) {
					this.workerUrl = workerUrl; 
					this.visitorIdKey = 'ikun-blog-visitor-id';
					this.lastVisitKey = 'ikun-blog-last-visit';
					
					if (!this.workerUrl) {
						console.error("Worker URL 未设置。访客统计功能将无法工作。");
						return;
					}
					this.init();
				}

				async init() {
					// 页面加载时，总是尝试追踪访问并更新统计
					this.trackVisit();
				}

				// 从 worker 获取最新统计数据并更新 UI (作为备用)
				async displayStatsFallback() {
					try {
						// 添加时间戳作为查询参数以防止缓存
						const url = `${this.workerUrl}?t=${new Date().getTime()}`;
						const response = await fetch(url, { method: 'GET' });
						if (!response.ok) throw new Error(`Worker 响应状态: ${response.status}`);
						const stats = await response.json();
						this.updateUi(stats);
					} catch (error) {
						console.error("获取访客统计失败:", error);
					}
				}

				// 通过向 worker 发送数据来追踪访问
				async trackVisit() {
					const visitorId = this.getVisitorId();
					const lastVisitDate = localStorage.getItem(this.lastVisitKey);
					const today = new Date().toISOString().split('T')[0];

					// 确定访客状态
					const isNewTotalVisitor = !localStorage.getItem(this.visitorIdKey);
					const isNewDailyVisitor = lastVisitDate !== today;

					try {
						// 添加时间戳作为查询参数以防止缓存
						const url = `${this.workerUrl}?t=${new Date().getTime()}`;
						// 每次页面加载都发送 POST 请求
						const response = await fetch(url, {
							method: 'POST',
							headers: { 'Content-Type': 'application/json' },
							body: JSON.stringify({ isNewTotalVisitor, isNewDailyVisitor }),
						});

						if (!response.ok) throw new Error(`Worker 响应状态: ${response.status}`);
						
						const stats = await response.json();
						this.updateUi(stats); // 使用来自 worker 的最新数据更新 UI

						// 成功请求后，更新 localStorage
						if (isNewTotalVisitor) {
							localStorage.setItem(this.visitorIdKey, visitorId);
						}
						localStorage.setItem(this.lastVisitKey, today);

					} catch (error) {
						console.error("追踪访问失败:", error);
						// 如果追踪失败，至少尝试获取并显示当前的统计数据
						this.displayStatsFallback();
					}
				}
				
				// 从 localStorage 获取或创建一个唯一的浏览器 ID
				getVisitorId() {
					let id = localStorage.getItem(this.visitorIdKey);
					if (!id) {
						id = `visitor_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
					}
					return id;
				}

				// 统一的 UI 更新函数
				updateUi(stats) {
					this.updateElement('dailyVisits', stats.dailyVisits || 0);
					this.updateElement('dailyVisitors', stats.dailyVisitors || 0);
					this.updateElement('totalVisits', stats.totalVisits || 0);
					this.updateElement('totalVisitors', stats.totalVisitors || 0);
				}

				// 更新页面元素的文本内容的辅助函数
				updateElement(id, value) {
					const element = document.getElementById(id);
					if (element) {
						element.textContent = value.toLocaleString();
					}
				}
			}

			// 页面加载完成后执行
			document.addEventListener('DOMContentLoaded', () => {
				// 初始化运行时间
				updateRuntime();
				setInterval(updateRuntime, 1000);
				
				// !!! 在这里粘贴您自己的 Worker URL !!!
				const CF_WORKER_URL = "https://my-blog-counter.your-subdomain.workers.dev";
				new BlogVisitorStats(CF_WORKER_URL);

				// 为“回到顶部”按钮添加点击事件
				const backToTopButton = document.getElementById('back-to-top');
				if(backToTopButton) {
						backToTopButton.addEventListener('click', () => {
								window.scrollTo({
										top: 0,
										behavior: 'smooth' // 平滑滚动效果
								});
						});
				}
			});
		</script>
		
		<!-- 网站分析脚本 -->
		<script src="https://hananalytics-2qg.pages.dev/tracker.min.js" data-website-id="IKUN-BLOG"></script>

	</main>
</footer>

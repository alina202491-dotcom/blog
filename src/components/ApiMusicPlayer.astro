---
// 文件路径: src/components/ApiMusicPlayer.astro
// 一个独立的、由 API 驱动的悬浮音乐播放器按钮 (JavaScript 自动定位版)

// MetingJS 配置
const server = "netease"; // 音乐平台: netease, tencent, kugou, xiami, baidu
const type = "playlist";   // 类型: song, playlist, album, search, artist
const id = "7499827393";  // 对应的歌单ID、歌曲ID等
---

<!-- 
  播放器容器。
  它会被下面的脚本自动移动到 <body> 的直接子节点，以确保 position:fixed 生效。
-->
<div id="music-player-container" class="fixed bottom-8 left-8 z-50">
    <!-- 自定义的播放/暂停按钮 -->
    <button 
        id="custom-play-pause-btn" 
        aria-label="Play or pause music"
        class="w-14 h-14 bg-gray-900/70 backdrop-blur-md rounded-full flex items-center justify-center text-white shadow-lg transition-all duration-300 hover:scale-110 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white"
    >
        <!-- 播放图标 -->
        <svg id="play-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
            <path d="M8 5v14l11-7z"></path>
        </svg>
        <!-- 暂停图标 -->
        <svg id="pause-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="hidden">
            <path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"></path>
        </svg>
    </button>
    
    <!-- MetingJS 播放器本体，始终不可见 -->
    <meting-js
        id="meting-player"
        server={server}
        type={type}
        id={id}
        fixed="false"
        autoplay="false"
        loop="all"
        order="random"
        preload="auto"
        list-folded="true"
    >
    </meting-js>
</div>

<!-- 引入 APlayer 和 MetingJS 的库 -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css" is:inline>
<script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" is:inline></script>
<script src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js" is:inline></script>


<style>
  /* 当按钮有 'playing' 类时，应用旋转动画 */
  #music-player-container.playing #custom-play-pause-btn {
    animation: spin 4s linear infinite;
  }

  /* 定义旋转动画 */
  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
</style>

<script>
    function setupMusicPlayer() {
        const playerContainer = document.getElementById('music-player-container');
        if (!playerContainer) return;

        // --- 核心修复 ---
        // 为了确保 position:fixed 不受父级 transform 影响，
        // 我们将播放器容器直接移动到 <body> 的末尾。
        if (playerContainer.parentElement !== document.body) {
            document.body.appendChild(playerContainer);
        }

        const customBtn = document.getElementById('custom-play-pause-btn');
        const playIcon = document.getElementById('play-icon');
        const pauseIcon = document.getElementById('pause-icon');

        if (!customBtn || !playIcon || !pauseIcon) return;

        // 轮询检查 aplayer 实例是否准备好
        const interval = setInterval(() => {
            const ap = (window as any).ap; 
            if (ap) {
                clearInterval(interval);

                const metingContainer = document.querySelector('.aplayer');
                if (metingContainer) (metingContainer as HTMLElement).style.display = 'none';

                const updateUI = () => {
                    if (ap.audio.paused) {
                        playerContainer.classList.remove('playing');
                        playIcon.classList.remove('hidden');
                        pauseIcon.classList.add('hidden');
                    } else {
                        playerContainer.classList.add('playing');
                        playIcon.classList.add('hidden');
                        pauseIcon.classList.remove('hidden');
                    }
                };

                updateUI();
                ap.on('play', updateUI);
                ap.on('pause', updateUI);
                customBtn.addEventListener('click', () => ap.toggle());
            }
        }, 100);
    }

    // 使用 'astro:page-load' 事件确保在客户端路由切换时也能正确执行
    document.addEventListener('astro:page-load', setupMusicPlayer);
</script>

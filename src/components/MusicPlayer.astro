---
// src/components/MusicPlayer.astro
//
// 使用说明:
// 1. 将此文件保存到你的 Astro 项目的 `src/components/` 目录下。
// 2. 在你的主布局文件 (例如 `src/layouts/Layout.astro`) 中导入并使用它。
//
// 自定义配置:
// 你可以修改下面的 `props` 来更换不同的音乐平台和歌单。
// - server: 音乐平台。可选值: "netease", "tencent", "kugou", "kuwo", "bilibili", "xiami"
// - type: 类型。可选值: "song", "playlist", "album", "search", "artist"
// - id: 对应类型的 ID。例如，网易云歌单的 ID。

export interface Props {
  server?: 'netease' | 'tencent' | 'kugou' | 'kuwo' | 'bilibili' | 'xiami';
  type?: 'song' | 'playlist' | 'album' | 'search' | 'artist';
  id?: string;
}

const {
  server = 'netease', // 默认使用网易云音乐
  type = 'playlist',   // 默认类型为歌单
  id = '3778678',       // 默认使用网易云音乐热歌榜作为示例
} = Astro.props;

// 这是从你的参考截图中找到的关键部分：一个可用的 Meting API 地址。
const customApi = `https://met.iiliu.cn/meting/api?server=${server}&type=${type}&id=${id}&r=${Math.random()}`;
---

<!-- 
  我们现在添加了 `api` 属性，并使用了 `mutex` 和 `preload` 属性，
  这与你提供的参考截图中的配置一致。
-->
<meting-js
  api={customApi}
  server={server}
  type={type}
  id={id}
  fixed="true"
  theme="#2980b9"
  order="random"
  lrc-type="1"
  volume="0.7"
  mini="true"
  mutex="true"
  preload="auto"
>
</meting-js>

<!-- 
  加载 MetingJS 的脚本文件。
-->
<script is:inline src="https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js"></script>

<!--
  我们保留了调试样式，以防万一。
  如果播放器正常显示了，你可以删除或注释掉这个 <style> 标签。
-->
<style is:global>
  .aplayer.aplayer-fixed {
    /* 定位 */
    left: 15px !important;
    bottom: 15px !important;

    /* --- 用于调试的样式 (如果播放器正常显示，可以删除) --- */
    z-index: 99999 !important; /* 强制设置到最顶层 */
    /* border: 2px solid red !important; */ /* 暂时注释掉边框 */
  }
</style>
```

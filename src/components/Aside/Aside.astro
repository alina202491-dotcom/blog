---
// 导入 Svg, 时间处理, 网站配置等
import Svg from "@/components/Svg/Svg.astro";
import { fmtTime } from "@/utils/index";
import SITE_CONFIG from "@/config";
const { Avatar, Author, Motto, WebSites, GoogleAds, AsideShow } = SITE_CONFIG;

// 导入文章数据获取工具
import { getCategories, getTags, getRecommendArticles, getCountInfo } from "@/utils/getPostInfo";
const categories = getCategories();
const tags = getTags();
const CountInfo = getCountInfo();
const recommendArticles = getRecommendArticles();

// 只需导入 GoogleAd
import GoogleAd from "@/components/GoogleAd/GoogleAd.astro";

// =================================================================
// 1. 在这里导入新的访客信息组件
import VisitorInfo from '@/components/VisitorInfo.astro';
// =================================================================

import "./Aside.less";

// 不再需要接收 headings
---

<!-- ================================================================= -->
<!-- 1. 新增：移动端切换按钮和背景遮罩层 -->
<!-- ================================================================= -->
<button id="aside-toggle-btn" class="aside-toggle-btn" aria-label="Toggle sidebar">
	<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line></svg>
</button>
<div id="aside-overlay" class="aside-overlay"></div>


<aside class="vh-aside">
	<!-- 头像块 -->
	{AsideShow.WebSitesShow && (
		<section class="vh-aside-item user">
			<img class="vh-aside-avatar" src="/assets/images/lazy-loading.webp" data-vh-lz-src={Avatar} alt={Author} />
			<span class="vh-aside-auther">{Author}</span>
			<p class="vh-aside-motto">{Motto}</p>
			<section class="vh-aside-links">
				{WebSites.map(item => (
					<a class="vh-aside-links-item" href={item.link} title={item.text} target="_blank" rel="noopener nofollow">
						<Svg src={item.icon} />
					</a>
				))}
			</section>
			<section class="vh-aside-info">
				<div class="art-item count"><span>{CountInfo.ArticleCount}</span><p>文章数</p></div>
				<div class="cat-item count"><span>{CountInfo.CategoryCount}</span><p>分类数</p></div>
				<div class="tag-item count"><span>{CountInfo.TagCount}</span><p>标签数</p></div>
			</section>
			<canvas class="vh-aside-canvas" width="888" height="1888" />
		</section>
	)}

    {/* ================================================================= */}
    {/* 2. 在头像块和公告块之间，插入访客信息组件                       */}
    <VisitorInfo />
    {/* ================================================================= */}

	<!-- 公告块 -->
	{SITE_CONFIG.Tips && (
		<section class="vh-aside-item tips">
			<span>
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
					<path stroke="none" d="M0 0h24v24H0z" fill="none" />
					<path d="M3 9.662c2 2.338 2 4.338 0 6.338c3 .5 4.5 1 5 4c2 -3 6 -4 9 0c0 -3 1 -4 4 -4.004q -3 -2.995 0 -5.996c-3 0 -5 -2 -5 -5c-2 4 -5 3 -7.5 -1c-.5 3 -2.5 5 -5.5 5.662" />
				</svg>
				公告
			</span>
			<div class="tips-content">
				<Fragment set:html={SITE_CONFIG.Tips} />
			</div>
		</section>
	)}

	<!-- 分类块 -->
	{AsideShow.CategoriesShow && (
		<section class="vh-aside-item cat">
			<h3>分类</h3>
			<div class="vh-aside-cat">
				{categories
					.sort((a: any, b: any) => b.count - a.count)
					.map(i => (
						<a href={`/categories/${i.title}`}>
							<span>{i.title}</span>
							<i>{i.count}</i>
						</a>
					))}
			</div>
		</section>
	)}

	<!-- 标签块 -->
	{AsideShow.TagsShow && (
		<section class="vh-aside-item tags">
			<h3>热门标签</h3>
			<div class="vh-aside-tags">
				{tags.map(i => (
					<a href={`/tag/${i[0]}`}>
						<span>{i[0]}</span>
						<em>{i[1]}</em>
					</a>
				))}
			</div>
		</section>
	)}

	<section class="sticky-aside">
		<!-- 最新文章块 -->
		{recommendArticles.length && AsideShow.recommendArticleShow && (
			<section class="vh-aside-item articles">
				<h3>推荐文章</h3>
				<div class="vh-aside-articles">
					{recommendArticles.map((i, idx) => (
						<a href={`/article/${i.id}`}>
							<span>
								{idx < 3 ? <i>{idx + 1}</i> : <em>{idx + 1}.</em>}
								<cite class="vh-ellipsis">{i.title}</cite>
							</span>
							<time>{fmtTime(i.date, "YYYY-MM-DD A")}</time>
						</a>
					))}
				</div>
			</section>
		)}

        {/* 关键：这里是目录的“占位符”，脚本会自动填充内容 */}
        <section class="vh-aside-item toc-wrapper" id="toc-placeholder"></section>

		<!-- 谷歌广告块 -->
		{GoogleAds.ad_Client && GoogleAds.asideAD_Slot && (
			<section class="vh-aside-item ad">
				<h3>广而告之</h3>
				<GoogleAd className="vh-aside-ad" slotID={GoogleAds.asideAD_Slot} />
			</section>
		)}
	</section>
</aside>

<!-- ================================================================= -->
<!-- 2. 新增：用于控制侧边栏的 CSS 样式 -->
<!-- is:global 确保这些样式在客户端 JS 切换 class 时能够生效 -->
<!-- ================================================================= -->
<style is:global>
/* 侧边栏切换按钮 */
.aside-toggle-btn {
	display: none; /* 桌面端默认隐藏 */
	position: fixed;
	top: 1rem;
	left: 1rem;
	z-index: 1001;
	background-color: var(--card-bg, white);
	border: 1px solid var(--border-color, #e5e7eb);
	border-radius: 50%;
	width: 44px;
	height: 44px;
	padding: 8px;
	cursor: pointer;
	box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
	transition: transform 0.2s ease-in-out;
}

.aside-toggle-btn:hover {
	transform: scale(1.1);
}

.aside-toggle-btn svg {
	width: 100%;
	height: 100%;
	stroke: var(--text-color, #374151);
}

/* 背景遮罩层 */
.aside-overlay {
	position: fixed;
	inset: 0;
	background-color: rgba(0, 0, 0, 0.5);
	z-index: 999;
	opacity: 0;
	visibility: hidden;
	transition: opacity 0.3s ease, visibility 0s 0.3s;
}

.aside-overlay.is-visible {
	opacity: 1;
	visibility: visible;
	transition: opacity 0.3s ease;
}

/* 媒体查询：当屏幕宽度小于 992px 时应用以下样式 */
@media (max-width: 992px) {
	/* 显示切换按钮 */
	.aside-toggle-btn {
		display: block;
	}

	/* 侧边栏样式调整 */
	.vh-aside {
		position: fixed;
		top: 0;
		left: 0;
		height: 100%;
		width: 280px; /* 侧边栏宽度 */
		z-index: 1000;
		transform: translateX(-100%); /* 默认移出屏幕外 */
		transition: transform 0.3s ease-in-out;
		overflow-y: auto; /* 当内容超出时允许滚动 */
		background-color: var(--card-bg, white); /* 添加背景色以防透明 */
		border-right: 1px solid var(--border-color, #e5e7eb);
	}

	/* 侧边栏打开时的状态 */
	.vh-aside.is-open {
		transform: translateX(0); /* 移入屏幕 */
	}
}
</style>


<!-- ================================================================= -->
<!-- 3. 新增：用于控制侧边栏显示/隐藏的客户端脚本 -->
<!-- ================================================================= -->
<script>
document.addEventListener('DOMContentLoaded', () => {
	const toggleBtn = document.getElementById('aside-toggle-btn');
	const aside = document.querySelector('.vh-aside');
	const overlay = document.getElementById('aside-overlay');

	if (!toggleBtn || !aside || !overlay) {
		return;
	}

	// 打开侧边栏
	const openSidebar = () => {
		aside.classList.add('is-open');
		overlay.classList.add('is-visible');
	};

	// 关闭侧边栏
	const closeSidebar = () => {
		aside.classList.remove('is-open');
		overlay.classList.remove('is-visible');
	};

	// 按钮点击事件：切换侧边栏状态
	toggleBtn.addEventListener('click', (e) => {
        e.stopPropagation();
		if (aside.classList.contains('is-open')) {
			closeSidebar();
		} else {
			openSidebar();
		}
	});

	// 遮罩层点击事件：关闭侧边栏
	overlay.addEventListener('click', closeSidebar);

	// 点击侧边栏中的链接后，自动关闭侧边栏，方便移动端跳转
	aside.addEventListener('click', (event) => {
		if (event.target.tagName === 'A') {
			closeSidebar();
		}
	});
});
</script>

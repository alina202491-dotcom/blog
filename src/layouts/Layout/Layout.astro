---
// 从 Astro.props 获取页面元数据和配置
const { title, keywords, description, pagecover, activeNav, Home } = Astro.props;
// 导入网站全局配置
import SITE_INFO from "@/config";
const { GoogleAds, Theme, HomeBanner } = SITE_INFO;
const { ad_Client, asideAD_Slot, articleAD_Slot } = GoogleAds;
// 导入 Head 组件，用于管理 <head> 标签内容
import Head from "@/components/Head/Head.astro";
// 导入顶部导航栏 Header 组件
import Header from "@/components/Header/Header.astro";
// 导入 Main 区域的 Header 组件
import MainHeader from "@/components/MainHeader/MainHeader.astro";
// 导入侧边栏 Aside 组件
import Aside from "@/components/Aside/Aside.astro";
// 导入底部 Footer 组件
import Footer from "@/components/Footer/Footer.astro";
// 导入返回顶部 BackTop 组件
import BackTop from "@/components/BackTop/BackTop.astro";
// 导入手机端侧边栏 MobileSidebar 组件
import MobileSidebar from "@/components/MobileSidebar/MobileSidebar.astro";
// 引入 Modern CSS Reset，用于重置浏览器默认样式
import "@/styles/Reset.less";
// 引入全局基础样式
import "@/styles/Base.less";
// 引入 Layout 自身的样式
import "./Layout.less";
---

<html lang="zh-CN">
	<Head Title={title} Keywords={keywords} Description={description} PageCover={pagecover}>
		<!-- 谷歌广告JS加载项 -->
		{ad_Client && (asideAD_Slot || articleAD_Slot) && <script is:inline async src={`https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=${ad_Client}`} crossorigin="anonymous" />}
		<!-- 彩旗🎈特效脚本 -->
		<script is:inline src="/assets/js/vhCaiqi.js" defer></script>
		<!-- 内联样式，用于动态设置主题颜色和Banner高度 -->
		<Fragment
			set:html={`<style>:root {${Object.entries(Theme)
				.map(([key, value]) => `${key}:${value};`)
				.join("")}--vh-main-header-height:${Home ? HomeBanner.HomeHeight : HomeBanner.PageHeight};--vh-home-banner:${HomeBanner.background}}</style>`}
		/>
	</Head>
	<body>
		<MobileSidebar />
		<Header activeNav={activeNav} />
		<main class="main">
			{HomeBanner.enable && <MainHeader />}
			<section class="main-inner" style={`padding-top:${HomeBanner.enable ? "0.88rem" : "calc(66px + 0.68rem)"}`}>
				<section class="main-inner-content">
					<!-- 主要页面内容将通过 slot 插入到这里 -->
					<slot />
				</section>
				<Aside />
			</section>
			<BackTop />
		</main>
		<Footer />

		<!-- ======================================================= -->
		<!-- == 樱花特效管理脚本 (最终修复版) == -->
		<!-- ======================================================= -->
		<script is:inline>
			// 定义核心的清理与重建函数
			function manageSakuraEffect() {
				// --- 第一步：强力清除旧特效 ---
				// 1. 调用官方的停止函数 (如果存在)
				if (typeof window.StopSakura === 'function') {
					window.StopSakura();
				}
				// 2. 移除旧的脚本标签
				const oldScript = document.getElementById('sakura-effect-script');
				if (oldScript) {
					oldScript.remove();
				}
				// 3. (最关键的一步) 移除所有由旧特效创建的 canvas 元素
				document.querySelectorAll('body > canvas').forEach(canvas => {
					canvas.remove();
				});

				// --- 第二步：创建新特效 ---
				const newScript = document.createElement('script');
				newScript.id = 'sakura-effect-script'; // 给它一个ID，方便下次清理时能找到它
				newScript.src = 'https://api.vvhan.com/api/script/yinghua';
				document.body.appendChild(newScript);
			}

			// --- 事件处理 ---
			// 1. 首次进入页面时，直接运行一次
			manageSakuraEffect();

			// 2. 在每次客户端导航后，使用 'astro:after-swap' 事件来运行
			// 这是在替换DOM后、渲染前，进行清理和重建的最佳时机
			document.addEventListener('astro:after-swap', manageSakuraEffect);
		</script>

		<script>
			// 导入并执行全局初始化脚本
			import InitFn from "@/scripts/Init";
			InitFn();
		</script>
	</body>
</html>

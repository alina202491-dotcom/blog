---
// 关键：不再需要从 props 获取 headings
const { title, keywords, description, pagecover, activeNav, Home } = Astro.props;
// 导入网站全局配置
import SITE_INFO from "@/config";
const { GoogleAds, Theme, HomeBanner } = SITE_INFO;
const { ad_Client, asideAD_Slot, articleAD_Slot } = GoogleAds;
// 导入各个组件
import Head from "@/components/Head/Head.astro";
import Header from "@/components/Header/Header.astro";
import MainHeader from "@/components/MainHeader/MainHeader.astro";
import Aside from "@/components/Aside/Aside.astro";
import Footer from "@/components/Footer/Footer.astro";
import BackTop from "@/components/BackTop/BackTop.astro";
import MobileSidebar from "@/components/MobileSidebar/MobileSidebar.astro";
import SakuraEffect from "@/components/SakuraEffect.astro";
// 导入新的目录管理器
import TocManager from "@/components/TocManager.astro";
// 引入样式
import "@/styles/Reset.less";
import "@/styles/Base.less";
import "./Layout.less";
---

<html lang="zh-CN">
	<Head {title} {keywords} {description} PageCover={pagecover}>
		<!-- 谷歌广告JS加载项 -->
		{ad_Client && (asideAD_Slot || articleAD_Slot) && <script is:inline async src={`https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=${ad_Client}`} crossorigin="anonymous" />}
		<!-- 彩旗🎈特效脚本 -->
		<script is:inline src="/assets/js/vhCaiqi.js" defer></script>
		<!-- 内联样式 -->
		<Fragment
			set:html={`<style>:root {${Object.entries(Theme)
				.map(([key, value]) => `${key}:${value};`)
				.join("")}--vh-main-header-height:${Home ? HomeBanner.HomeHeight : HomeBanner.PageHeight};--vh-home-banner:${HomeBanner.background}}</style>`}
		/>
	</Head>
	<body>
		<MobileSidebar />
		<Header {activeNav} />
		<main class="main">
			{HomeBanner.enable && <MainHeader />}
			<section class="main-inner" style={`padding-top:${HomeBanner.enable ? "0.88rem" : "calc(66px + 0.68rem)"}`}>
				<section class="main-inner-content">
					<slot />
				</section>
                {/* 关键：Aside 组件不再需要任何 props */}
				<Aside />
			</section>
			<BackTop />
		</main>
		<Footer />
		<SakuraEffect />
		
		{/* 关键：在页面底部添加目录管理器 */}
		<TocManager />

		<script>
			import InitFn from "@/scripts/Init";
			InitFn();
		</script>

        {/* --- 新增：修复侧边栏滑动效果的脚本 --- */}
        <script>
          // 这个函数用于初始化侧边栏按钮的功能
          function initializeSidebarToggle() {
            const toggleBtn = document.getElementById('aside-toggle-btn');
            const sidebar = document.querySelector('.vh-aside');
            const overlay = document.getElementById('aside-overlay');

            // 如果页面上没有这些元素，就什么也不做
            if (!toggleBtn || !sidebar || !overlay) {
              return;
            }

            // 检查按钮是否已经绑定过事件，防止重复绑定
            if (toggleBtn.dataset.listenerAttached) {
                return;
            }

            const closeSidebar = () => {
              sidebar.classList.remove('is-open');
              overlay.classList.remove('is-visible');
            };

            const openSidebar = () => {
              sidebar.classList.add('is-open');
              overlay.classList.add('is-visible');
            };

            // 为按钮添加点击事件
            toggleBtn.addEventListener('click', (e) => {
              e.stopPropagation();
              if (sidebar.classList.contains('is-open')) {
                closeSidebar();
              } else {
                openSidebar();
              }
            });

            // 为遮罩层添加点击事件，用于关闭侧边栏
            overlay.addEventListener('click', closeSidebar);
            
            // 给按钮做一个标记，表示已经绑定过事件了
            toggleBtn.dataset.listenerAttached = 'true';
          }

          // 页面首次加载时，运行一次初始化函数
          document.addEventListener('DOMContentLoaded', initializeSidebarToggle);

          // 在Astro的页面切换（视图转换）完成后，再次运行初始化函数
          // 这是确保按钮在站内跳转后依然有效的关键
          document.addEventListener('astro:after-swap', initializeSidebarToggle);
        </script>
	</body>
</html>
